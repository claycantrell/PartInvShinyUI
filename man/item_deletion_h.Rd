% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/item_deletion_h.R
\name{item_deletion_h}
\alias{item_deletion_h}
\title{Effect size of item deletion on selection accuracy}
\usage{
item_deletion_h(
  propsel,
  cut_z = NULL,
  weights_item,
  n_dim,
  weights_latent,
  alpha_r,
  alpha_f = alpha_r,
  psi_r,
  psi_f = psi_r,
  lambda_r_p,
  lambda_f_p = lambda_r_p,
  nu_r_p,
  nu_f_p = nu_r_p,
  theta_r_p,
  theta_f_p = theta_r_p,
  pmix_ref = 0.5,
  plot_contour = TRUE,
  return_results = FALSE,
  ...
)
}
\arguments{
\item{propsel:}{proportion of selection. If missing, computed using \code{cut_z}}

\item{cut_z:}{pre-specified cutoff score on the observed composite. This
argument is ignored when \code{propsel} has input}

\item{weights_item:}{a vector of item weights}

\item{n_dim:}{number of dimensions, 1 by default. If the user does not supply
a different value, proceeds with the assumption that the scale is
unidimensional}

\item{n_i_per_dim:}{a vector containing the number of items in each
dimension; NULL by default. If the user provides a value for n_dim
that is > 1 but leaves n_i_per_dim = NULL, assumes that the subscales
have an equal number of items.}

\item{weights_latent:}{a  vector of latent factor weights}

\item{alpha_r:}{a vector of latent factor mean for the reference group.}

\item{alpha_f:}{(optional) a vector of latent factor mean for the focal
group;if no input, set equal to alpha_r.}

\item{psi_r:}{a matrix of latent factor variance for the reference group.}

\item{psi_f:}{(optional) a matrix of latent factor variance for the focal
group; if no input, set equal to psi_r.}

\item{lambda_r_p:}{a matrix of factor loadings for the reference group under
the partial invariance condition.}

\item{lambda_f_p:}{(optional) a matrix of factor loadings for the focal group
under the partial invariance condition; if no input, set equal to
lambda_r.}

\item{nu_r_p:}{a matrix of measurement intercepts for the reference group
under the partial invariance condition.}

\item{nu_f_p:}{(optional) a matrix of measurement intercepts for the focal
group under the partial invariance condition; if no input, set equal
to nu_r.}

\item{Theta_r_p:}{a matrix of the unique factor variances and covariances
for the reference group under the partial invariance condition.}

\item{Theta_f_p:}{(optional) a matrix of the unique factor variances and
covariances for the focal group under the partial invariance
condition; if no input, set equal to Theta_r.}

\item{pmix_ref:}{Proportion of the reference group;
default to 0.5 (i.e., two populations have equal size)}

\item{plot_contour:}{logical; whether the contour of the two populations
should be plotted; default to TRUE}

\item{return_results:}{logical; whether the outputs from each call
of \code{PartInv_Multi_we} should also be returned as part of the
returned object; default to FALSE}
}
\value{
a list of the following two elements (or a list of the following
four elements if return_results == TRUE):
- delta_table: a (8 x number of items) dataframe that stores Cohen's
h values for the effect size of the impact of item bias for each i
- store_h: a list of length (number of items + 1) containing outputs
from \code{ref_acc_indices_h}. Each item in the list is a
restructured data frame comparing the various selection accuracy
indices for the reference group under the strict and partial
invariance conditions, and the corresponding h for each index. The
first item in the list, 'full', contains the dataframe output for
when all items are included, and the remaining dataframes
can be accessed by specifying i in '...$store_h$deleteitem_i'\preformatted{     The following two lists of length (number of items + 1) are also 
     returned if the user indicates return_results == TRUE:
   
  - strict_results: contains outputs from \code{PartInvMulti_we} 
    under strict invariance.
  - partial_results: contains outputs from \code{PartInvMulti_we} 
    under partial invariance. 
    The first item in either list can be accessed through 
    '...$(partial/strict)_results$full' and contains the 
    \code{PartInvMulti_we} output when all items are included. Remaining 
    items in the list are of the 'deleteitem_i' form, and contain the 
    \code{PartInvMulti_we} output when a given item i is deleted
}
}
\description{
\code{item_deletion_h} computes the effect size of the impact of item bias on
selection accuracy indices under strict vs. partial invariance using Cohen's
h (1988).
}
\examples{
# Multidimensional example
lambda_matrix <- matrix(0, nrow = 5, ncol = 2)
lambda_matrix[1:2, 1] <- c(.322, .655)
lambda_matrix[3:5, 2] <- c(.398, .745, .543)
multi_dim <- item_deletion_h(propsel = .05, n_dim = 5,
                            weights_item = c(1/4, 1/4, 1/6, 1/6, 1/6),
                            weights_latent = c(0.5, 0.5),
                            alpha_r = c(0, 0),
                            alpha_f = c(-0.3, 0.1),
                            psi_r = matrix(c(1, 0.5, 0.5, 1), nrow = 2),
                            lambda_r_p = lambda_matrix,
                            nu_r_p = c(.225, .025, .010, .240, .125),
                            nu_f_p = c(.225, -.05, .240, -.025, .125),
                            theta_r_p = diag(1, 5),
                            theta_f_p = c(1, .95, .80, .75, 1), 
                            plot_contour = FALSE,
                            return_results = TRUE)
multi_dim$delta_table
multi_dim$store_h$full
multi_dim$store_h$deleteitem_1
multi_dim$strict_results$full
multi_dim$strict_results$deleteitem_1
multi_dim$partial_results$full
multi_dim$strict_results$deleteitem_1

# Single dimension example
single_dim <- item_deletion_h(propsel = .10,
                             weights_item = c(1, 0.9, 0.8, 1),
                             weights_latent = 0.9,
                             alpha_r = 0.5,
                             alpha_f = 0,
                             psi_r = 1,
                             lambda_r_p = c(.3, .5, .9, .7),
                             nu_r_p = c(.225, .025, .010, .240),
                             nu_f_p = c(.225, -.05, .240, -.025),
                             theta_r_p = diag(.96, 4),
                             n_dim = 1, plot_contour = FALSE, 
                             return_results = FALSE)
single_dim$delta_table
single_dim$store_h$full
single_dim$store_h$deleteitem_1
single_dim$strict_results$full
single_dim$strict_results$deleteitem_1
single_dim$partial_results$full
single_dim$strict_results$deleteitem_1  

# If we specify return_results = FALSE
single_dim2 <- item_deletion_h(propsel = .10,
                               weights_item = c(1, 0.9, 0.8, 1),
                               weights_latent = 0.9,
                               alpha_r = 0.5,
                               alpha_f = 0,
                               psi_r = 1,
                               lambda_r_p = c(.3, .5, .9, .7),
                               nu_r_p = c(.225, .025, .010, .240),
                               nu_f_p = c(.225, -.05, .240, -.025),
                               theta_r_p = diag(.96, 4),
                               n_dim = 1, plot_contour = FALSE,
                               return_results = FALSE)
single_dim2$delta_table
single_dim2$store_h$full
single_dim2$store_h$deleteitem_1                     
}
